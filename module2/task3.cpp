/*
В этой задаче вам нужно реализовать функцию, которая сдвигает содержимое массива влево на заданное число позиций
(циклический сдвиг).

На вход функция принимает массив, его размер и величину сдвига. Например, если на вход функции подан массив:
int a[] = { 1, 2, 3, 4, 5 }; и требуется циклически сдвинуть его влево на 2 позиции, то на выходе мы получим числа в
таком порядке: 3, 4, 5, 1, 2.

Обратите внимание, что величина сдвига может быть нулевой, а может быть и больше размера массива, все эти случаи нужно
учесть.

Требования к реализации: вам нужно реализовать только функцию циклического сдвига. При этом она не должна вводить или
выводить что-либо. При решении этой задачи вы можете определять любые вспомогательные функции, если они вам нужны.
Реализовывать функцию main не нужно. Предполагается, что вам не потребуется дополнительная память, а именно: массивы и
стандартные контейнеры. Пользоваться стандартными алгоритмами и контейнерами не разрешается, даже если вы с ними
знакомы.

Рекомендация: перед тем, как начать кодировать решение этой задачи, продумайте алгоритм, который вы будете
использовать. В данной задаче не проверяется эффективность этого алгоритма (в разумных пределах).

Подсказка: вам может потребоваться оператор % для вычисления остатка. Наиболее простая реализация этой функции сдвигает
массив на один элемент за проход. Наиболее простая реализация несколько раз использует функцию, которая переставляет
элементы массива в обратном порядке.
*/

/*
 a = {1 2 3 4 5}
 size = 5 | shift = 3 | i = 2
 2 <-> 4 (5 - (3 - 2)) 1 2 5 4 3
 1 <-> 3 (5 - (3 - 1)) 1 4 5 2 3
 0 <-> 2 (5 - (3 - 0)) 5 4 1 2 3
 --------------------------------
 size = 2 | shift = 3 % 2 = 1 | i = 0
 0 <-> 1 (2 - (1 - 0)) 4 5 1 2 3
 --------------------------------
 size = 1 | shift = 1 | i = 0
 0 <-> 0 (1 - (1 - 0)) 4 5 1 2 3
 --------------------------------
 size = 0 -> return
 #################################
 a = {1 2 3 4 5}
 size = 5 | shift = 2 | i = 1
 1 <-> 4 (5 - (2 - 1)) 1 5 3 4 2
 0 <-> 3 (5 - (2 - 0)) 4 5 3 1 2
 --------------------------------
 size = 3 | shift = 2 | i = 1
 1 <-> 2 (3 - (2 - 1)) 4 3 5 1 2
 0 <-> 1 (3 - (2 - 0)) 3 4 5 1 2
 --------------------------------
 size = 1 | shift = 1 % 2 = 1 | i = 0
 0 <-> 0 (1 - (1 - 0)) 3 4 5 1 2
 --------------------------------
 size = 0 -> return
*/

#include <iostream>
using namespace std;

void rotate(int a[], unsigned size, int shift) {
    if (size == 0 || shift == 0) {
        return;
    }
    if (shift >= size) {
        shift = shift % size;
    }
    int t = 0, r = 0;
    for (int i = shift - 1; i >= 0; i--) {
        r = size - (shift - i);
        t = *(a + i);
        *(a + i) = *(a + r);
        *(a + r) = t;
    }
    rotate(a, size - shift, shift);
}

int main() {
    int a[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};
    int shift = 0;
    unsigned s = (unsigned) (sizeof(a) / sizeof(*a));

    cout << "Input shift:" << endl;
    cin >> shift;

    rotate(a, s, shift);

    for (int i = 0; i < s; i++) {
        cout << a[i] << " ";
    }
    cout << endl;

    return 0;
}